"""Add categories and update models

Revision ID: 299fb03f9517
Revises: f1641d805a55
Create Date: 2025-05-28 10:44:25.341631

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '299fb03f9517'
down_revision: Union[str, None] = 'f1641d805a55'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_table('book_category',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'category_id')
    )
    op.add_column('book', sa.Column('publisher', sa.String(length=100), nullable=True))
    op.add_column('book', sa.Column('language', sa.String(length=50), nullable=True))
    op.add_column('book', sa.Column('pages', sa.Integer(), nullable=True))
    op.create_index('idx_book_title_author', 'book', ['title', 'author'], unique=False)
    op.add_column('loan', sa.Column('start_date', sa.Date(), nullable=False))
    op.add_column('loan', sa.Column('end_date', sa.Date(), nullable=True))
    op.add_column('loan', sa.Column('returned', sa.Date(), nullable=True))
    op.drop_constraint(None, 'loan', type_='foreignkey')
    op.drop_constraint(None, 'loan', type_='foreignkey')
    op.create_foreign_key(None, 'loan', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'loan', 'book', ['book_id'], ['id'], ondelete='CASCADE')
    op.drop_column('loan', 'due_date')
    op.drop_column('loan', 'loan_date')
    op.drop_column('loan', 'return_date')
    op.add_column('user', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('user', sa.Column('address', sa.String(length=200), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'address')
    op.drop_column('user', 'phone')
    op.add_column('loan', sa.Column('return_date', sa.DATETIME(), nullable=True))
    op.add_column('loan', sa.Column('loan_date', sa.DATETIME(), nullable=False))
    op.add_column('loan', sa.Column('due_date', sa.DATETIME(), nullable=False))
    op.drop_constraint(None, 'loan', type_='foreignkey')
    op.drop_constraint(None, 'loan', type_='foreignkey')
    op.create_foreign_key(None, 'loan', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'loan', 'book', ['book_id'], ['id'])
    op.drop_column('loan', 'returned')
    op.drop_column('loan', 'end_date')
    op.drop_column('loan', 'start_date')
    op.drop_index('idx_book_title_author', table_name='book')
    op.drop_column('book', 'pages')
    op.drop_column('book', 'language')
    op.drop_column('book', 'publisher')
    op.drop_table('book_category')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
